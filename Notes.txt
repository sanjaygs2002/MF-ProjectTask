npx create-mf-app@1.1.8
To Check version: npm view create-mf-app versions

npm install --save-dev cross-env Then config package.json = cross-env

-- Json server
npx json-server --watch db.json --port 5000 

npm i @reduxjs/toolkit react-redux


Use every mf because of shared same version of all mf to exexutes without affecting.
  "@reduxjs/toolkit": { singleton: true, eager: true },
    react: { singleton: true, requiredVersion: "^18.2.0" },
  "react-dom": { singleton: true, requiredVersion: "^18.2.0" },
  "react-router-dom": { singleton: true, requiredVersion: "^6.14.0" },


-----------------------------------Testing----------------------------------
// src/setupTests.js
import "@testing-library/jest-dom"; // extends expect with custom matchers


// jest.config.js

export default {
  testEnvironment: "jsdom",
  transform: {
    "^.+\\.(js|jsx|ts|tsx)$": "babel-jest",
  },
  moduleFileExtensions: ["js", "jsx", "ts", "tsx"],
  setupFilesAfterEnv: ["<rootDir>/src/setupTests.js"],
};

// babel.config.js

module.exports = {
  presets: [
    "@babel/preset-env",
    ["@babel/preset-react", { runtime: "automatic" }]
  ],
  plugins: ["@babel/plugin-transform-runtime"]
};

npm install --save-dev @babel/core @babel/preset-env @babel/preset-react @babel/plugin-transform-runtime
npm install --save @babel/runtime
npm install --save-dev jest @testing-library/react @testing-library/jest-dom @testing-library/user-event














